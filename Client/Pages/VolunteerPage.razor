@page "/volunteerpage"
@inject HttpClient Http
@using festival.Shared.Models

<h3>Vælg en vagt</h3>

@if (shifts == null)
{
    <p><em>Henter tilgængelige vagter...</em></p>
}
else if (shifts.Count == 0)
{
    <p>Ingen tilgængelige vagter på dette tidspunkt.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Titel</th>
                <th>Område</th>
                <th>Starttid</th>
                <th>Sluttid</th>
                <th>Vigtighed</th>
                <th>Handling</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var shift in shifts)
            {
                <tr>
                    <td>@shift.Title</td>
                    <td>@shift.Area</td>
                    <td>@shift.StartTime</td>
                    <td>@shift.EndTime</td>
                    <td>@shift.Importance</td>
                    <td>
                        @if (!shift.IsFull)
                        {
                            <button class="btn btn-primary" @onclick="@(() => AssignVolunteer(shift))">Vælg</button>
                        }
                        else
                        {
                            <button class="btn btn-secondary" disabled>Fuld</button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Shift>? shifts;

    protected override async Task OnInitializedAsync()
    {
        shifts = await Http.GetFromJsonAsync<List<Shift>>("api/shift");
    }

    private async Task AssignVolunteer(Shift shift)
    {
        // Her skal du tilføje logik for at tildele en frivillig til vagten
        // Dette kan involvere at sende en anmodning til serveren og opdatere UI'et
    }
}
